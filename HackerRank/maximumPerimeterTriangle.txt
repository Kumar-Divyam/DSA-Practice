int* maximumPerimeterTriangle(int sticks_count, int* sticks, int* result_count) {
    int i,j,k,max,flag,T=0;
    int *a=(int*)calloc(3,sizeof(int));

    for (i = 0; i < sticks_count; i++) 
    { 
        flag=0;
        for (j = 0; j < sticks_count-i-1; j++) 
        { 
            if (sticks[j] > sticks[j+1]) 
            { 
                sticks[j]=sticks[j]+sticks[j+1];
                sticks[j+1]=sticks[j]-sticks[j+1];
                sticks[j]=sticks[j]-sticks[j+1];
                flag=1;
            } 
        } 
        if (flag == 0) 
            break; 
   }
 
   max=0;
   for(i=0 ; i <= (sticks_count-3) ; i++)
   {
       
       k=i+1;
       for(j=i+1; j<= (sticks_count-2) ; j++)
       {
           flag=0;k++;
           while((k<sticks_count) && ((sticks[i]+sticks[j])>sticks[k]))
           {
                flag=1;k++;
           }
           if(flag==1)
           {
               T=1;
               a[0]=sticks[i];
               a[1]=sticks[j];
               a[2]=sticks[k-1];
               printf("%d %d %d\n",i,j,k-1);
           }    
       }
   }
   printf("\n\n");
   printf("%d %d %d ",a[0],a[1],a[2]);
    if(T==1)
    {
        * result_count=3;
        return a;
    }

    * result_count=1;
    a[0]=-1;
    return a;

}
