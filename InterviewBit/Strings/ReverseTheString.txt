string Solution::solve(string A) {
    string res="";
    int n=A.size();
    int i=0;
    int j;
    while(i<n)
    {
        while(i<n && A[i]==' ') 
            i++;
        j=i+1;
        while(j<n && A[j]!=' ') 
            j++;
        string temp=A.substr(i,j-i);
        if(res=="") 
            res=temp;
        else 
            res=temp+" "+res;
        i=j+1;
    }
    if(res[0]==' ')
        return res.substr(1,res.length()-1);
    return res;
}


//OR

/*
string Solution::solve(string A) {
    string res="";
    while(A.length()>0){
        int pos=A.find_last_of(" ");
        if(pos==string::npos) break;
        string temp = A.substr(pos+1);
        res+=temp+" ";
        A.erase(A.begin()+pos,A.end());
        int x= A.find_last_not_of(" ");
        A.erase(A.begin()+x+1,A.end());
    }
    res+=A;
    if(res[res.size()-1]==' ')
        res.erase(res.size()-1);
    if(res[0]==' ')
        return res.substr(1,res.length()-1);
    return res;
}


*/