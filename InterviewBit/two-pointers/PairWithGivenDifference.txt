
/* using hash
#include <bits/stdc++.h>
int Solution::solve(vector<int> &A, int B) {
    unordered_set <int> ss ;
    for(int i=0 ;i<A.size();i++){
        ss.insert(A[i]);
    }
    for(int i=0 ;i<A.size();i++){
        if(ss.find(A[i]-B)!=ss.end() || ss.find(A[i]+B)!=ss.end())
            return 1;
    }
    return 0;
}
*/

//2 pointers
int Solution::solve(vector<int> &A, int B) {
    if(A.size() ==0) return 0;
    sort(A.begin(),A.end());
    int N=A.size()-1;
    int i = 0, j = 1, diff = 0;
    while(i <= N && j <=N){
        diff = A[j] - A[i];
        if(i != j && diff == B) return 1;
        else if(diff < B) j++;
        else i++;
    }
    return 0;
}
