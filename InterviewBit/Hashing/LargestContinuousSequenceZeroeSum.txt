vector<int> Solution::lszero(vector<int> &A) {
    vector<int> ss(A.size(),0);
    ss[0]=A[0];
    for(int i=1;i<A.size(); i++)
        ss[i]=ss[i-1]+A[i];
        
    unordered_map<int,pair<int,int>> m;
    m.insert({0,{-1,-1}});
    for(int i=0;i<ss.size();i++){
        if(m.find(ss[i])!=m.end()){
            m.find(ss[i])->second.second=i;
        }
        else
            m.insert({ss[i],{i,-1}});
    }
    vector<int> res;
    int l=-1,r=-1,mxdif=INT_MIN;
    
    unordered_map<int,pair<int,int>>:: iterator it=m.begin();
    for(;it!=m.end();it++){
            int dif=(it->second.second - it->second.first);
            if(dif>mxdif){
                mxdif=dif;
                l=it->second.first;
                r=it->second.second;
            }
            else if(dif==mxdif){//useless but because of bad compiler
                mxdif=dif;
                l=min(l,it->second.first);
                r=min(r,it->second.second);
            }
            else
                continue;
    }
    for(int i=l+1;i<=r;i++)
        res.push_back(A[i]);
        
    return res;
}
