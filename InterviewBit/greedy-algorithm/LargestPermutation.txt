/*
//using map
vector<int> Solution::solve(vector<int> &a, int k) {
    int n=a.size();
    vector<int> mp(n+1,0);
    for(int i=0;i<n;i++){
        mp[a[i]]=i;
    }
    for(int i=0;i<n && k>0;i++){
        if(a[i]==n-i) continue;
        else{
            swap(mp[a[i]],mp[n-i]);
            swap(a[mp[a[i]]],a[i]);
            k--;
        }
    }
    return a;
}
*/

//using hash
vector<int> Solution::solve(vector<int> &A, int B) {
    int n=A.size();
    vector<int>ind(n+1);
    for(int i=0;i<n;i++)
        ind[A[i]]=i;
    int i=0;
    while(B>0 && i<A.size()){
        if(A[i]==n-i){
            i++;
        }
        else{
            int e=A[i];int p=ind[n-i];
            swap(A[i],A[ind[n-i]]);B--;
            ind[n-i]=i;ind[e]=p;
            i++;
        }
    }
    return A;
}
