int Solution::solve(vector<vector<int> > &A, int B) {
    int N = A.size();
    vector<vector <int>> res(N+1, vector (N+1,0));
    for(int i = 0; i < N; i++) {
        for(int j = 1; j < N; j++) {
            A[i][j] = A[i][j] + A[i][j-1];
        }
    }
    for(int i = 0; i < N; i++) {
        for(int j = 1; j < N; j++) {
            A[j][i] = A[j][i] + A[j-1][i];
        }
    }
    for(int i = 0 ; i < N; i++) {
        for(int j = 0; j < N; j++) {
            res[i+1][j+1] += A[i][j];
        }
    }
    int max_sum = INT_MIN;
    for(int i = B; i < N+1; i++) {
        for(int j = B; j < N+1; j++) {
            int sum = res[i-B][j] - res[i-B][j-B];
            sum += res[i][j-B] - res[i-B][j-B];
            sum += res[i-B][j-B];
            max_sum = max(max_sum,res[i][j] - sum);
        }
    }
    return max_sum;
}


